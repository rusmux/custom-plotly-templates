name: CI

on: [ push, pull_request, workflow_dispatch ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.10"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install dependencies
        run: |
          apt-get update && apt-get install make
          pip install -U pip
          make install

      - name: Run pre-commit
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest

    needs: pre-commit
    continue-on-error: true

    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          apt-get update && apt-get install make
          pip install -U pip
          make install

      - name: Test with pytest
        run: pytest

  publish:
    runs-on: ubuntu-latest

    needs: [ pre-commit, test ]
    if: github.ref == 'refs/heads/main'
    environment: publish
    steps:
      - name: Publish
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry build
          poetry publish
